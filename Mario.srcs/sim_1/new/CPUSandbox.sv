`timescale 1ns / 1ps

module CPUSandbox();
    logic                       CLK;
    logic [3:0]                 TBRS;
    logic [15:0]                TBROut, IAddr;
    logic [31:0]                IMemDOut;

    CPU DUT(.TBRS(TBRS),
            .TBROut(TBROut),
            .IMemDOut(memory[IAddr]),
            .CLK(CLK),
            .IAddr(IAddr));

    initial begin
        CLK = 0;
        forever #5 CLK = ~CLK;
    end

    logic [31:0] memory [0:65535];

    initial begin
        TBRS = 4'b1111;
        memory[0] = 32'b11110000000000100100011111111110;
        memory[1] = 32'b11110000000000110010111111111110;
        memory[2] = 32'b11110000000000110110011111111110;
        memory[3] = 32'b11110000000000110110011111111110;
        memory[4] = 32'b11110000000000110111111111111110;
        memory[5] = 32'b11110000000000010000011111111110;
        memory[6] = 32'b11110000000000100011011111111110;
        memory[7] = 32'b11110000000000111001011111111110;
        memory[8] = 32'b11110000000000110111111111111110;
        memory[9] = 32'b11110000000000110110111111111110;
        memory[10] = 32'b11110000000000010000011111111110;
        memory[11] = 32'b11110000000000101001111111111110;
        memory[12] = 32'b11110000000000110100111111111110;
        memory[13] = 32'b11110000000000110110011111111110;
        memory[14] = 32'b11110000000000110100111111111110;
        memory[15] = 32'b11110000000000110001111111111110;
        memory[16] = 32'b11110000000000110111111111111110;
        memory[17] = 32'b11110000000000110111011111111110;
        memory[18] = 32'b11110000000000010000111111111110;
        memory[19] = 32'b11110000000000000110111111111110;
        memory[20] = 32'b11110000000000000000011111111110;
        memory[21] = 32'b11010000000000000000000000000000;
        
        #1000;
        $finish;
    end

    initial begin
    #10;
        forever begin 
            $write("%c", TBROut[7:0]);
            #10;
        end
    end
endmodule
