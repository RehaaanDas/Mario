$date
   Wed Aug 27 12:50:14 2025
$end

$version
  2025.1.0
$end

$timescale
  1ps
$end

$scope module CU_TB $end
$var reg 1 ! CLK $end
$var reg 1 " Z $end
$var reg 1 # N $end
$var reg 1 $ O $end
$var reg 16 % AOut [15:0] $end
$var reg 16 & BOut [15:0] $end
$var reg 16 ' COut [15:0] $end
$var reg 16 ( DOut [15:0] $end
$var reg 16 ) EOut [15:0] $end
$var reg 16 * MemDOut [15:0] $end
$var reg 16 + ALUResult [15:0] $end
$var reg 32 , IMemDOut [31:0] $end
$var reg 4 - ASOut [3:0] $end
$var reg 4 . BSOut [3:0] $end
$var reg 4 / CSOut [3:0] $end
$var reg 4 0 DSOut [3:0] $end
$var reg 4 1 ESOut [3:0] $end
$var reg 4 2 RFSIn [3:0] $end
$var reg 16 3 RFDIn [15:0] $end
$var reg 16 4 MemDIn [15:0] $end
$var reg 16 5 IAddr [15:0] $end
$var reg 10 6 MemAddrIn [9:0] $end
$var reg 10 7 MemAddrOut [9:0] $end
$var reg 1 8 MWE $end
$var reg 1 9 RFWE $end
$var reg 2 : ALUOperation [1:0] $end
$scope module DUT $end
$var wire 1 ; CLK $end
$var wire 1 < Z $end
$var wire 1 = N $end
$var wire 1 > O $end
$var wire 16 ? AOut [15:0] $end
$var wire 16 @ BOut [15:0] $end
$var wire 16 A COut [15:0] $end
$var wire 16 B DOut [15:0] $end
$var wire 16 C EOut [15:0] $end
$var wire 16 D MemDOut [15:0] $end
$var wire 16 E ALUResult [15:0] $end
$var wire 32 F IMemDOut [31:0] $end
$var reg 4 - ASOut [3:0] $end
$var reg 4 . BSOut [3:0] $end
$var reg 4 / CSOut [3:0] $end
$var reg 4 0 DSOut [3:0] $end
$var reg 4 1 ESOut [3:0] $end
$var reg 4 2 RFSIn [3:0] $end
$var reg 16 3 RFDIn [15:0] $end
$var reg 16 4 MemDIn [15:0] $end
$var reg 16 5 IAddr [15:0] $end
$var reg 10 6 MemAddrIn [9:0] $end
$var reg 10 7 MemAddrOut [9:0] $end
$var reg 1 8 MWE $end
$var reg 1 9 RFWE $end
$var reg 2 : ALUOperation [1:0] $end
$var reg 45 G FD [44:0] $end
$var reg 45 H D [44:0] $end
$var reg 45 I DX [44:0] $end
$var reg 45 J X [44:0] $end
$var reg 45 K XM [44:0] $end
$var reg 45 L M [44:0] $end
$var reg 45 M MB [44:0] $end
$var reg 16 N EXOverlayD [15:0] $end
$var reg 4 O EXOverlayS [3:0] $end
$var reg 1 P XnoWriters $end
$var reg 16 Q MEMOverlayD [15:0] $end
$var reg 4 R MEMOverlayS [3:0] $end
$var reg 1 S MnoWriters $end
$var wire 1 T JmpConfirm $end
$var wire 1 U Stall $end
$var wire 1 V JmpAddr $end
$var wire 1 W ALUWE $end
$var wire 1 X XBOut $end
$var wire 1 Y MDOut $end
$var wire 1 Z MCOut $end
$var wire 1 [ ALUQTop_D $end
$var wire 1 \ ALUQTop_S $end
$var wire 1 ] ALUQTop_WE $end
$var wire 1 ^ ALUQBottom_D $end
$var wire 1 _ ALUQBottom_S $end
$var wire 1 ` ALUQBottom_WE $end
$scope module PC $end
$var wire 16 a JmpAddr [15:0] $end
$var wire 1 ; CLK $end
$var wire 1 T Jmp $end
$var wire 1 U STALL $end
$var reg 16 5 IAddr [15:0] $end
$var reg 16 b NextI [15:0] $end
$upscope $end
$scope module ID $end
$var wire 32 c Instruction [31:0] $end
$var reg 45 H PayloadOut [44:0] $end
$upscope $end
$scope module EX $end
$var wire 16 d BOut [15:0] $end
$var wire 45 e Payload [44:0] $end
$var wire 1 < Z $end
$var wire 1 = N $end
$var wire 1 > O $end
$var reg 16 f JmpAddr [15:0] $end
$var reg 45 J PayloadOut [44:0] $end
$var reg 4 - ASOut [3:0] $end
$var reg 4 . BSOut [3:0] $end
$var reg 1 g ALUWE $end
$var reg 1 h ALUOperation $end
$var reg 1 i JmpConfirm $end
$var reg 1 j JmpValid $end
$upscope $end
$scope module OX $end
$var wire 1 k noWriters $end
$var wire 4 . ReaderS [3:0] $end
$var wire 4 l BypassS [3:0] $end
$var wire 16 m BypassD [15:0] $end
$var wire 16 @ RFD [15:0] $end
$var wire 16 n ReaderD [15:0] $end
$upscope $end
$scope module MEM $end
$var wire 45 o Payload [44:0] $end
$var wire 16 p DOut [15:0] $end
$var wire 16 q COut [15:0] $end
$var wire 16 D MemDOut [15:0] $end
$var reg 45 L PayloadOut [44:0] $end
$var reg 4 0 DSOut [3:0] $end
$var reg 4 / CSOut [3:0] $end
$var reg 10 6 MemAddrIn [9:0] $end
$var reg 10 7 MemAddrOut [9:0] $end
$var reg 16 4 MemDIn [15:0] $end
$var reg 1 8 WE $end
$var reg 1 r Stall $end
$var wire 1 s REn $end
$upscope $end
$scope module ODD $end
$var wire 1 t noWriters $end
$var wire 4 0 ReaderS [3:0] $end
$var wire 4 u BypassS [3:0] $end
$var wire 16 v BypassD [15:0] $end
$var wire 16 B RFD [15:0] $end
$var wire 16 w ReaderD [15:0] $end
$upscope $end
$scope module ODC $end
$var wire 1 x noWriters $end
$var wire 4 / ReaderS [3:0] $end
$var wire 4 y BypassS [3:0] $end
$var wire 16 z BypassD [15:0] $end
$var wire 16 A RFD [15:0] $end
$var wire 16 { ReaderD [15:0] $end
$upscope $end
$scope module WB $end
$var wire 45 | Payload [44:0] $end
$var wire 16 C EOut [15:0] $end
$var wire 1 ; CLK $end
$var wire 16 E ALUResult [15:0] $end
$var wire 4 } ALUAcc [3:0] $end
$var wire 1 W ALUWE $end
$var reg 16 3 DIn [15:0] $end
$var reg 4 2 SIn [3:0] $end
$var reg 4 1 ESOut [3:0] $end
$var reg 1 9 WE $end
$var reg 16 ~ ALUQTop_D [15:0] $end
$var reg 4 !! ALUQTop_S [3:0] $end
$var reg 1 "! ALUQTop_WE $end
$var reg 16 #! ALUQBottom_D [15:0] $end
$var reg 4 $! ALUQBottom_S [3:0] $end
$var reg 1 %! ALUQBottom_WE $end
$var reg 21 &! ALUQueueBottom [20:0] $end
$var reg 21 '! ALUQueueTop [20:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
bx !!
x"
x"!
x#
bx #!
x$
bx $!
bx %
x%!
bx &
bx &!
bx '
bx '!
bx (
bx )
bx *
bx +
b10110000000000000000000000000000 ,
bx -
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
b0 5
bx 6
bx 7
x8
x9
b0x :
0;
x<
x=
x>
bx ?
bx @
bx A
bx B
bx C
bx D
bx E
b10110000000000000000000000000000 F
bx G
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
1P
bx Q
bx R
1S
xT
xU
xV
xW
xX
xY
xZ
x[
x\
x]
x^
x_
x`
bzx a
bx b
bx c
bzx d
bx e
bx f
xg
xh
xi
xj
1k
bx l
bx m
bx n
bx o
bzx p
bzx q
xr
xs
1t
bx u
bx v
bx w
1x
bx y
bx z
bx {
bx |
bx }
bx ~
$end

#5000
1!
b0 -
bx 5
b0 :
1;
b10110000000000000000000000000000 G
b0 H
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x I
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x J
0T
0W
b10110000000000000000000000000000 c
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x e
0g
0h
0i

#10000
0!
0;

#15000
1!
0%!
bx0 &!
b0 .
b0 0
18
1;
b0 I
b0 J
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x K
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x L
0U
0V
0`
bz0 a
b0 e
b0 f
1j
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x o
0r

#20000
0!
0;

#25000
1!
0"!
bx0 '!
b0 /
b0 1
b0 4
b0 6
b0 7
08
09
1;
b0 K
b0 L
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x M
0]
b0 o
0s
b10000000xxxxxxxxxxxxxxxxxxxxxxxxxx0000xxxx00x |

#30000
0!
0;

#35000
1!
1;
b0 M
b0 |

#40000
0!
b11110000011111010010000110000000 ,
0;
b11110000011111010010000110000000 F

#45000
1!
1;
b11110000011111010010000110000000 G
b100000000111110100100000000000000000011000 H
b11110000011111010010000110000000 c

#50000
0!
b10110000000000000000000000000000 ,
0;
b10110000000000000000000000000000 F

#55000
1!
b11 .
1;
b10110000000000000000000000000000 G
b0 H
b100000000111110100100000000000000000011000 I
b100000000111110100100000000000000000011000 J
b10110000000000000000000000000000 c
b100000000111110100100000000000000000011000 e
b111110100100 f

#60000
0!
0;

#65000
1!
b0 .
b11 /
b111110100100 4
1;
b0 I
b0 J
b100000000111110100100000000000000000011000 K
b100000000111110100100000000000000000011000 L
b11 O
b0 e
b0 f
b11 l
b100000000111110100100000000000000000011000 o

#70000
0!
0;

#75000
1!
b0 /
b11 2
b111110100100 3
b0 4
19
1;
b0 K
b0 L
b100000000111110100100000000000000000011000 M
b111110100100 N
b111110100100 Q
b11 R
0X
0Y
0Z
bz0 d
b111110100100 m
b111110100100 n
b0 o
bz0 p
bz0 q
b11 u
b111110100100 v
b111110100100 w
b11 y
b111110100100 z
b111110100100 {
b100000000111110100100000000000000000011000 |

#80000
0!
0;

#85000
1!
bx 2
bx 3
09
1;
b0 M
b0 |

#90000
0!
0;

#95000
1!
1;

#100000
0!
0;

#105000
1!
1;

#110000
0!
0;

#115000
1!
1;

#120000
0!
b1100110011001100 )
b1000010001110000000000000000000 ,
0;
b1100110011001100 C
b1000010001110000000000000000000 F

#125000
1!
1;
b1000010001110000000000000000000 G
b10000000000000000000000000000001000111000 H
b1000010001110000000000000000000 c

#130000
0!
b10110000000000000000000000000000 ,
0;
b10110000000000000000000000000000 F

#135000
1!
b100 -
b111 .
1;
b10110000000000000000000000000000 G
b0 H
b10000000000000000000000000000001000111000 I
b10000000000000000000000000000001000111000 J
b10110000000000000000000000000000 c
b10000000000000000000000000000001000111000 e

#140000
0!
0;

#145000
1!
b0 -
b0 .
b111 /
b100 0
1;
b0 I
b0 J
b10000000000000000000000000000001000111000 K
b10000000000000000000000000000001000111000 L
b0 N
b111 O
b0 e
b111 l
b0 m
b0 n
b10000000000000000000000000000001000111000 o

#150000
0!
0;

#155000
1!
b0 /
b0 0
b100 1
b111 2
b1100110011001100 3
19
1;
b0 K
b0 L
b10000000000000000000000000000001000111000 M
b1100110011001100 N
b1100110011001100 Q
b111 R
b1100110011001100 m
b1100110011001100 n
b0 o
b111 u
b1100110011001100 v
b1100110011001100 w
b111 y
b1100110011001100 z
b1100110011001100 {
b10000000000000000000000000000001000111000 |

#160000
0!
0;

#165000
1!
b0 1
bx 2
bx 3
09
1;
b0 M
b0 |

#170000
0!
0;

#175000
1!
1;

#180000
0!
0;

#185000
1!
1;

#190000
0!
0;

#195000
1!
1;

#200000
0!
b1010101010101010 *
b10011100000010000000000000000 ,
0;
b1010101010101010 D
b10011100000010000000000000000 F

#205000
1!
1;
b10011100000010000000000000000 G
b1000000000000000000000000000100001110000000 H
b10011100000010000000000000000 c

#210000
0!
b10110000000000000000000000000000 ,
0;
b10110000000000000000000000000000 F

#215000
1!
b111 -
1;
b10110000000000000000000000000000 G
b0 H
b1000000000000000000000000000100001110000000 I
b1000000000000000000000000000100001110000000 J
b10110000000000000000000000000000 c
b1000000000000000000000000000100001110000000 e

#220000
0!
0;

#225000
1!
b0 -
b111 0
b1000 6
b1000 7
1;
b0 I
b0 J
b1000000000000000000000000000100001110000000 K
b100001010101010101010000000000000000111000 L
1U
b0 e
b1000000000000000000000000000100001110000000 o
1r

#230000
0!
0;

#235000
1!
b0 0
b111 2
b1010101010101010 3
b0 6
b0 7
19
1;
b0 K
b0 L
b100001010101010101010000000000000000111000 M
b1010101010101010 N
b1010101010101010 Q
0U
b1010101010101010 m
b1010101010101010 n
b0 o
0r
b1010101010101010 v
b1010101010101010 w
b1010101010101010 z
b1010101010101010 {
b100001010101010101010000000000000000111000 |

#240000
0!
0;

#245000
1!
bx 2
bx 3
09
1;
b0 M
b0 |

#250000
0!
0;

#255000
1!
1;

#260000
0!
0;

#265000
1!
1;

#270000
0!
0;

#275000
1!
1;

#280000
0!
0;

#285000
1!
1;

#290000
0!
b1111111111111111 '
b110110110110110 *
b11011100110000000000000000000 ,
0;
b1111111111111111 A
b110110110110110 D
b11011100110000000000000000000 F

#295000
1!
1;
b11011100110000000000000000000 G
b1000000000000000000000001100000001110011001 H
b11011100110000000000000000000 c

#300000
0!
b10110000000000000000000000000000 ,
0;
b10110000000000000000000000000000 F

#305000
1!
b111 -
b11 .
1;
b10110000000000000000000000000000 G
b0 H
b1000000000000000000000001100000001110011001 I
b1000000000000000000000001100000001110011001 J
b10110000000000000000000000000000 c
b1000000000000000000000001100000001110011001 e
xj

#310000
0!
0;

#315000
1!
b0 -
b0 .
b11 /
b111 0
bz0 6
bz0 7
1;
b0 I
b0 J
b1000000000000000000000001100000001110011001 K
b100000110110110110110000000000000000111000 L
1U
b0 e
1j
b1000000000000000000000001100000001110011001 o
1r
1s

#320000
0!
0;

#325000
1!
b0 /
b0 0
b111 2
b110110110110110 3
b0 6
b0 7
19
1;
b0 K
b0 L
b100000110110110110110000000000000000111000 M
b110110110110110 N
b110110110110110 Q
0U
b110110110110110 m
b110110110110110 n
b0 o
0r
0s
b110110110110110 v
b110110110110110 w
b110110110110110 z
b110110110110110 {
b100000110110110110110000000000000000111000 |

#330000
0!
0;

#335000
1!
bx 2
bx 3
09
1;
b0 M
b0 |

#340000
0!
0;
